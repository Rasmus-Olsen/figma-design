---
import AccordionItem from "../components/AccordionItem.astro";

const { data, exclusive } = Astro.props;
---

<section class="accordion-container" data-exclusive={exclusive}>
  <div class="accordion-top">
    <p class="green-tag">FAQ</p>
    <h1>Customer Questions</h1>
  </div>
  <ul>
    {data.map((props) => <AccordionItem {...props} />)}
  </ul>
</section>


<style>
  @layer components {
  .accordion-container {
    background: #f5f5f5;
    border-radius: 30px;
    padding: 50px;

    @media (width < 600px) {
      padding: 40px 20px;
    }
    .accordion-top {
      text-align: center;
      .green-tag {
        display: inline-block;
        padding: 4px 20px;
        background: var(--secondary-color);
        color: var(--white-color);
        border-radius: 100px;
      }
    }
    ul {
      list-style: none;
      padding: 0 1rlh;
      margin-inline: auto;
    }
  }
}
</style>

<script>
  // @ts-nocheck
  const accordionWrappers = document.querySelectorAll(".accordion-container");

  accordionWrappers.forEach((accordionWrapper) => {
    accordionWrapper.addEventListener("click", (event) => {
      const button = event.target;
      const article = button.closest("article");
      const exclusive = accordionWrapper.dataset.exclusive;

      if (!article || button.tagName.toLowerCase() !== "button") {
        return;
      }

      const expanded = button.getAttribute("aria-expanded") === "true" || false;

      if (exclusive === "true") {
        const currentExpanded = accordionWrapper.querySelector(
          '[aria-expanded="true"]'
        );

        if (currentExpanded && currentExpanded !== button) {
          currentExpanded.setAttribute("aria-expanded", "false");
        }
      }

      button.setAttribute("aria-expanded", !expanded);
    });
  });
</script>
